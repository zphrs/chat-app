var te=Object.defineProperty;var F=Object.getOwnPropertySymbols;var se=Object.prototype.hasOwnProperty,oe=Object.prototype.propertyIsEnumerable;var z=(s,e,t)=>e in s?te(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,J=(s,e)=>{for(var t in e||(e={}))se.call(e,t)&&z(s,t,e[t]);if(F)for(var t of F(e))oe.call(e,t)&&z(s,t,e[t]);return s};import{r as C,u as P,a as V,b as q,o as r,c as l,d as g,e as i,w,p as A,f as M,g as c,h as ae,i as y,t as W,j as v,k as ne,l as x,F as T,m as U,n as re,q as D,s as ie,v as L,x as le,y as ce,z as ue}from"./vendor.93d1a9d9.js";const de=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))a(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const u of n.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&a(u)}).observe(document,{childList:!0,subtree:!0});function t(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerpolicy&&(n.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?n.credentials="include":o.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function a(o){if(o.ep)return;o.ep=!0;const n=t(o);fetch(o.href,n)}};de();class B{constructor(e){this.url=e,this.chats=[],this.userInfo={},this.closeUserWS=null,this.loginCallbacks=[t=>{this.userInfo[t]=t}]}async createUser(e,t=void 0){try{this.user=await N(this.url+"/make-user",{id:t,name:e},this.user)}catch{return null}for(const a of this.loginCallbacks)a(this.user);return this.closeUserWS===null&&this.user&&(this.closeUserWS=this.subToUserChanges()),this.closeUserWS!==null&&!this.user&&(this.closeUserWS(),this.closeUserWS=null),this.user}async setUser(e,t){if(this.user=await R(this.url+"/me",{secretId:t,id:e}),this.user.chatIds!==void 0)for(const a of this.user.chatIds)this.chats.push({id:a,messages:[],lastFetch:0});for(const a of this.loginCallbacks)a(this.user);return this.closeUserWS===null&&this.user&&(this.closeUserWS=this.subToUserChanges()),this.closeUserWS!==null&&!this.user&&(this.closeUserWS(),this.closeUserWS=null),this.user}async deleteAccount(){console.log(this.user),await N(this.url+"/delete-account",{},this.user),this.user=void 0;for(const e of this.loginCallbacks)e(this.user)}onUserChange(e){return this.loginCallbacks.push(e),()=>{this.loginCallbacks=this.loginCallbacks.filter(t=>t!==e)}}setLastMessage(e,t){this.lastIndex=t,this.lastMessage=e}async getTopMessages(e,t,a=0){const o=await R(this.url+`/get-top-messages/${e}/${a}/${t}`,this.user);for(const n of o)await this.addUsernameToMessage(n);return o}async addUsernameToMessage(e){if(!e.senderId)return e.username="[unknown]",e;const t=await this.getUserInfo(e.senderId);return e.username=t.name,e}async sendMessage(e,t){await N(this.url+`/get-chat/${e}/post-message`,{chatId:e,message:t},this.user)}async subToUserChanges(){return new Promise((e,t)=>{this.user||t("Not logged in");const a=new WebSocket((location.protocol==="https:"?"wss://":"ws://")+new URL(this.url).host+"/ws/user?userId="+this.user.id+"&secret="+this.user.secretId);a.onmessage=async o=>{const n=JSON.parse(o.data);if(n.type==="update"){e(a.close),this.user=n.user;for(const u of this.loginCallbacks)u(this.user)}},a.onerror=t,a.onclose=()=>{window.location.reload()}})}async subToChatMessages(e,t,a){return new Promise((o,n)=>{if(console.log(new URL(this.url)),console.log("initing ws"),!this.user)throw new Error("No user logged in");const u=new WebSocket((location.protocol==="https:"?"wss://":"ws://")+new URL(this.url).host+"/ws/chat?userId="+this.user.id+"&secret="+this.user.secretId+"&chatId="+e);u.onmessage=async m=>{const h=JSON.parse(m.data);if(h.type==="error",h.type==="message"){const d=await this.addUsernameToMessage(h.message);t(d)}if(h.type==="messages"){o(u);for(let d of h.messages)d=await this.addUsernameToMessage(d),t(d)}h.type==="metadata"&&a(h.metadata)},u.onerror=m=>{console.log(m),n(m)},u.onclose=m=>{m.code===1006&&(console.log("ws closed"),t({type:"error",message:"Connection to chat '"+e+"' lost"}))}})}async promote(e,t){e.send(JSON.stringify({type:"promote",userId:t}))}async createChat(e){try{await N(this.url+"/add-chat",{users:[],id:e},this.user);for(const t of this.loginCallbacks)t(this.user)}catch{alert(`a chat with id '${e}' already exists`)}}async getUserInfo(e,t=!1){if(t||this.userInfo[e]===void 0){const a=await R(this.url+`/get-user/${e}`,this.user);this.userInfo[e]=a}return this.userInfo[e]}}async function N(s,e,t){let a=t?`Bearer ${t.id}:${t.secretId}`:"";return(await fetch(s,{method:"POST",headers:{"Content-Type":"application/json",Authorization:a},body:JSON.stringify(e)})).json()}async function R(s,e){let t=e?`Bearer ${e.id}:${e.secretId}`:"";return(await fetch(s,{headers:{Authorization:t}})).json()}var I=(s,e)=>{const t=s.__vccOpts||s;for(const[a,o]of e)t[a]=o;return t};const he={id:"app"},pe={setup(s){const e=new B("http://127.0.0.1:5500"),t=C(e.user);P();const a=V();return e.onUserChange(()=>{t.value=J({},e.user),console.log("user changed",t.value)}),a.beforeEach(async(o,n)=>{if(console.log("before each",o,n,t.value),t.value)return!0;if(o.path==="/")try{return await e.setUser(localStorage.getItem("user"),localStorage.getItem("token")),!0}catch{return!0}if(!t.value&&localStorage.getItem("user"))if(await e.setUser(localStorage.getItem("user"),localStorage.getItem("token")),!t.value)localStorage.removeItem("user"),localStorage.removeItem("token");else return!0;return{path:"/",query:{redirect:o.fullPath}}}),(o,n)=>{const u=q("router-view");return r(),l("div",he,[g(u,{user:t.value,db:i(e)},null,8,["user","db"])])}}};var _e=I(pe,[["__scopeId","data-v-98456636"]]);const me={},Y=s=>(A("data-v-070506be"),s=s(),M(),s),fe=Y(()=>c("h1",null,"Chat App",-1)),ge=Y(()=>c("h2",null,"About",-1)),ve=y("back"),ye=ae("<p data-v-070506be> Chats are readable by anyone who knows (or guesses) the chat id. Only promoted users are able to send messages. Any promoted user can see who has viewed the chat and promote any of them to be a messenger. Treat the chat id like a password for the chat. </p><p data-v-070506be> Your account and messages might be deleted at any time for any reason. This site is mostly an educational exercise for me, but if you want to use it feel free. </p><p data-v-070506be> Accounts are on a per-browser basis. There is no sign out and no way to log into another browser. For security&#39;s sake and my laziness in not wanting to do oAuth, you cannot log in on any other device. You can delete your account if you would like (the closest action to logging out) which will remove your name from all messages and will remove you from all chats. If a chat has no messengers left then the chat will be deleted. This action is irreversible. I recommend you delete your account before you log off if you are using a shared computer. </p><p data-v-070506be> If you want a secure and robust chat system, find a different chat system. If you just want an easy way to make a quick group chat (that has no notifications, verification, or guarentees about messages continuing to exist) with an easy join code then this site is for you! </p><details data-v-070506be><summary data-v-070506be>Nerdy Details</summary><h3 data-v-070506be>Authentication</h3><p data-v-070506be> Essentially I use a uuid-v4 as a de facto password for every user, stored in localstorage. This is not secure as if the uuid is leaked then the account is permanently compromised since the uuid password never expires. What I <i data-v-070506be>should</i> do is store a hashed+salted+peppered password for each user and manage all the oAuth stuff with a database. It&#39;s on my list of todos. </p><h3 data-v-070506be>Database</h3><p data-v-070506be> I use node&#39;s fs library to read and write to json files. It isn&#39;t thread safe. It caches the data as it needs to in HashTables and then on every request after the first it will just get the data from memory. The database stores the data object on every assignment. The data object and its children get frozen. This ensures that the json file and the cached data remain in sync. </p><h3 data-v-070506be>API</h3><p data-v-070506be> I wrote an api using express. The api consists of get requests to see messages and user info and post requests to create new messages and register accounts. Anyone can get messages if they know the chat id. Anyone can get user info if they know the user id. Only promoted approved users can post. Authentication for the API is done with bearer tokens. </p><h3 data-v-070506be>Websocket</h3><p data-v-070506be> I use a websocket to allow messages to be updated in real time without needing to constantly poll the server for new messages. The websocket also sends information about metadata changes to anyone who is allowed to send messages to the chat. </p></details>",5),be=y("back");function we(s,e){const t=q("router-link");return r(),l("div",null,[fe,ge,g(t,{to:"/"},{default:w(()=>[ve]),_:1}),ye,g(t,{to:"/"},{default:w(()=>[be]),_:1})])}var ke=I(me,[["render",we],["__scopeId","data-v-070506be"]]);const Ie=["onSubmit"],Se=["minlength","maxlength","placeholder","value"],$e={props:{btnText:String,placeholder:String,minlength:String,maxlength:String,defaultValue:String},emits:["submit"],setup(s,{emit:e}){const t=s,{btnText:a,placeholder:o,minlength:n,maxlength:u,defaultValue:m}=W(t);function h(d){const _=d.target.text.value;n.value&&_.length<Number.parseInt(n.value)||u.value&&_.length>Number.parseInt(u.value)||(e("submit",_),d.target.children[0].value="")}return(d,_)=>(r(),l("form",{onSubmit:ne(h,["prevent"])},[c("input",{type:"text",minlength:i(n),maxlength:i(u),name:"text",placeholder:i(o),value:i(m),required:""},null,8,Se),c("button",null,v(i(a)),1)],40,Ie))}};var S=I($e,[["__scopeId","data-v-3987b34a"]]);const j=s=>(A("data-v-0baeb962"),s=s(),M(),s),Ce={key:0},xe={key:0,class:"error"},Te=j(()=>c("h1",null,"Chat App",-1)),Ue={key:1},Ae={key:2},Me=j(()=>c("p",null,[c("b",null," Warning: anything and everything that you post can be deleted or publicly exposed at any time. Use at your own risk. ")],-1)),je=y("About/policies"),Oe=j(()=>c("br",null,null,-1)),qe={key:1},We={key:0,class:"error"},Ne=y("About/policies"),Pe=j(()=>c("br",null,null,-1)),Ve={class:"chat-flex"},Be={class:"form"},He=j(()=>c("h3",null,"Postable Chats",-1)),Le={class:"form"},Re=j(()=>c("h3",null,"Viewed Chats",-1)),De={props:{db:Object,user:Object},setup(s){const e=s,{db:t,user:a}=W(e),o=V(),n=P();console.log(a.value);async function u(){await t.value.deleteAccount(),localStorage.removeItem("user"),localStorage.removeItem("token"),o.push("/")}async function m(_){console.log("clicked");const p=await t.value.createUser(_);if(!p){o.push({path:"/",query:{error:"connection to chat server could not be made"}}),window.setTimeout(()=>{history.replaceState&&history.replaceState(history.state,"",location.pathname+location.search.replace(/[\?&]error=[^&]+/,"").replace(/^&/,"?")+location.hash)},0);return}localStorage.setItem("user",p.id),localStorage.setItem("token",p.secretId),console.log(localStorage.getItem("user")),n.query.redirect&&o.push(n.query.redirect)}async function h(_){try{await t.value.createChat(_)}catch(p){console.log(p)}console.log(a.value)}async function d(_){o.push(`/chat/${_}`)}return history.replaceState&&history.replaceState(history.state,"",location.pathname+location.search.replace(/[\?&]error=[^&]+/,"").replace(/^&/,"?")+location.hash),(_,p)=>{const k=q("router-link");return!i(a)||i(a).name===void 0?(r(),l("div",Ce,[i(n).query.error?(r(),l("div",xe,v(i(n).query.error),1)):x("",!0),Te,i(n).query.redirect?(r(),l("h2",Ue," Create an account to go to "+v(i(n).query.redirect),1)):(r(),l("h2",Ae,"Mostly just a tech demo.")),Me,g(k,{to:"/about"},{default:w(()=>[je]),_:1}),Oe,g(S,{onSubmit:m,placeholder:"username",btnText:"Create Account",class:"form",minlength:"3"})])):(r(),l("div",qe,[i(n).query.error?(r(),l("div",We,v(i(n).query.error),1)):x("",!0),c("h1",null,"Hello "+v(i(a).name),1),g(k,{to:"/about"},{default:w(()=>[Ne]),_:1}),Pe,c("button",{onClick:u},"Delete Account"),c("div",Ve,[c("div",Be,[g(S,{onSubmit:h,placeholder:"id",btnText:"Create Chat",minlength:"6"}),He,(r(!0),l(T,null,U([...i(a).chatIds].reverse(),b=>(r(),l("div",{key:b},[g(k,{to:`/chat/${b}`},{default:w(()=>[y(v(b),1)]),_:2},1032,["to"])]))),128))]),c("div",Le,[g(S,{onSubmit:d,placeholder:"id",btnText:"Join Chat",minlength:"6"}),Re,(r(!0),l(T,null,U([...i(a).viewedChats].reverse(),b=>(r(),l("div",{key:b},[g(k,{to:`/chat/${b}`},{default:w(()=>[y(v(b),1)]),_:2},1032,["to"])]))),128))])])]))}}};var Ee=I(De,[["__scopeId","data-v-0baeb962"]]);const Fe=s=>(A("data-v-72863228"),s=s(),M(),s),ze=Fe(()=>c("br",null,null,-1)),Je={props:{user:Object,message:Object},setup(s){return(e,t)=>(r(),l("div",{class:re(["message",s.message.senderId===s.user.id&&"me"])},[c("b",null,v(s.message.username),1),ze,y(" "+v(s.message.content),1)],2))}};var Ye=I(Je,[["__scopeId","data-v-72863228"]]);const K=s=>(A("data-v-76125f52"),s=s(),M(),s),Ke={key:0,class:"posters"},Ge=K(()=>c("h3",null,"Posters:",-1)),Qe={key:1,class:"viewers"},Xe=K(()=>c("h3",null,"Viewers:",-1)),Ze=["onClick"],et={props:{user:Object,chatMetadata:Object,db:B},emits:["promote"],setup(s,{emit:e}){const t=s,{db:a,user:o,chatMetadata:n}=W(t),u=D(()=>n.value.users.filter(d=>d!==o.value.id)),m=D(()=>n.value.viewedBy.filter(d=>d!==o.value.id&&!n.value.users.includes(d)));console.log(u.value,m.value);function h(d){e("promote",d)}return(d,_)=>(r(),l("div",null,[i(u).length?(r(),l("div",Ke,[Ge,(r(!0),l(T,null,U(i(u),p=>(r(),l("div",{class:"poster",key:p.id},v(p.name),1))),128))])):x("",!0),i(m).length?(r(),l("div",Qe,[Xe,(r(!0),l(T,null,U(i(m),p=>(r(),l("div",{class:"viewer",key:p.id},[y(v(p.name)+" - ",1),c("button",{onClick:k=>h(p.id)},"Promote",8,Ze)]))),128))])):x("",!0)]))}};var tt=I(et,[["__scopeId","data-v-76125f52"]]);const st=s=>(A("data-v-1c4dfd16"),s=s(),M(),s),ot={class:"chat-parent"},at={class:"top"},nt=y("home"),rt={key:2,class:"send"},it={key:1},lt=st(()=>c("p",null," You are not allowed to post in this chat. Contact the person who sent you the link to ask for posting privleges. ",-1)),ct=[lt],ut={props:{db:B,user:Object},setup(s){const e=s,t=P(),a=V(),{db:o,user:n}=W(e),u=t.params.id,m=D(()=>d.value.id),h=C([]),d=C({}),_=C(null),p=C(!1),k=C(null);let b=!1;async function E(){if(!b){b=!0;try{k.value=await o.value.subToChatMessages(u,f=>{f.type&&f.type==="error"&&a.push({path:"/",query:{error:f.message}}),console.log("added message ",f),h.value=[...h.value,f],window.setTimeout(()=>{_.value.scrollTo(0,_.value.scrollHeight,{behavior:"smooth"})},0)},async f=>{console.log("metadata",f),f.viewedBy=await Promise.all(f.viewedBy.map($=>o.value.getUserInfo($))),f.users=await Promise.all(f.users.map($=>o.value.getUserInfo($))),d.value=f})}catch{console.log("HERE"),a.push(t.path.replace(/\/+$/,"")+"/404")}}}n.value&&E();const G=o.value.onUserChange(E);function Q(f){f.length<1||o.value.sendMessage(u,f)}ie(()=>{G(),k.value.close()});function X(){_.value.scrollTo(0,_.value.scrollHeight,{behavior:"smooth"})}function Z(f){o.value.promote(k.value,f)}return(f,$)=>{const ee=q("router-link");return r(),l("div",ot,[c("div",at,[g(ee,{to:"/",class:"link"},{default:w(()=>[nt]),_:1}),i(m)?(r(),l("button",{key:0,onClick:$[0]||($[0]=H=>p.value=!p.value)},v(p.value?"Hide":"Show Viewers"),1)):x("",!0)]),p.value?(r(),L(tt,{key:1,chatMetadata:d.value,user:i(n),db:i(o),onPromote:Z},null,8,["chatMetadata","user","db"])):(r(),l("div",{key:0,class:"messages",ref_key:"messagesDiv",ref:_,onVnodeMounted:X},[(r(!0),l(T,null,U(h.value,H=>(r(),L(Ye,{message:H,user:i(n),db:i(o),key:H.id},null,8,["message","user","db"]))),128))],512)),p.value?x("",!0):(r(),l("div",rt,[i(m)?(r(),L(S,{key:0,btnText:"post",placeholder:"message",onSubmit:Q,minlength:"1"})):(r(),l("div",it,ct))]))])}}};var dt=I(ut,[["__scopeId","data-v-1c4dfd16"]]);const O=s=>(A("data-v-403bc000"),s=s(),M(),s),ht={key:0},pt=O(()=>c("h1",null,"Chat not found!",-1)),_t=O(()=>c("h2",null,"Mostly just a tech demo.",-1)),mt=O(()=>c("p",null,[c("b",null," Warning: anything and everything that you post can be deleted or publicly exposed at any time. Use at your own risk. ")],-1)),ft=y("Back"),gt=O(()=>c("br",null,null,-1)),vt={key:1},yt=y("back to home"),bt=O(()=>c("br",null,null,-1)),wt=O(()=>c("h3",null,"Your chats:",-1)),kt={props:{db:B,user:Object},setup(s){const e=s,{db:t,user:a}=W(e),o=V(),n=P();async function u(h){try{await t.value.createChat(h)}catch(d){console.log(d)}console.log(a.value)}async function m(h){o.push(`/chat/${h}`)}return(h,d)=>{const _=q("router-link");return!i(a)||i(a).name===void 0?(r(),l("div",ht,[pt,_t,mt,g(_,{to:"/"},{default:w(()=>[ft]),_:1}),gt,g(S,{onSubmit:h.createUser,placeholder:"username",btnText:"Create Account",class:"form",minlength:"3"},null,8,["onSubmit"])])):(r(),l("div",vt,[c("h1",null,"Chat "+v(i(n).params.id)+" not found",1),g(_,{to:"/"},{default:w(()=>[yt]),_:1}),bt,g(S,{onSubmit:u,placeholder:"id",btnText:"Create Chat",class:"form",minlength:"6",defaultValue:i(n).params.id},null,8,["defaultValue"]),g(S,{onSubmit:m,placeholder:"id",btnText:"Join Chat",class:"form",minlength:"6"}),wt,(r(!0),l(T,null,U([...i(a).chatIds].reverse(),p=>(r(),l("div",{key:p},[g(_,{to:`/chat/${p}`},{default:w(()=>[y(v(p),1)]),_:2},1032,["to"])]))),128))]))}}};var It=I(kt,[["__scopeId","data-v-403bc000"]]);const St=[{path:"/",component:Ee},{path:"/about",component:ke},{path:"/chat/:id",component:dt},{path:"/chat/:id/404",component:It}],$t=le({history:ce(),routes:St});ue(_e).use($t).mount("#app");
